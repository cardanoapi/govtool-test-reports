{"uid":"756f817a779d1d6a","name":"test_get_proposal","fullName":"test_cases.test_proposal#test_get_proposal","historyId":"7e463ae446f9db00cac0d1406fa57657","time":{"start":1723791002156,"stop":1723791002369,"duration":213},"status":"failed","statusMessage":"AssertionError: Expected Proposal.metadata to be present\nassert 'metadata' in {'abstainVotes': 2491553547320, 'abstract': None, 'createdDate': '2024-08-12T11:06:06Z', 'createdEpochNo': 424, ...}","statusTrace":"govtool_api = <lib.govtool_api.GovToolApi object at 0x7f1e639be650>\n\n    @allure.story(\"Proposal\")\n    def test_get_proposal(govtool_api):\n        response: ProposalListResponse = govtool_api.proposal_list().json()\n        for proposal in response[\"elements\"]:\n            proposal_get: GetProposalResponse = govtool_api.get_proposal(\n                proposal[\"txHash\"] + \"%23\" + str(proposal[\"index\"])\n            ).json()\n>           assert validate_proposal(proposal_get[\"proposal\"])\n\ntest_cases/test_proposal.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproposal = {'abstainVotes': 2491553547320, 'abstract': None, 'createdDate': '2024-08-12T11:06:06Z', 'createdEpochNo': 424, ...}\n\n    def validate_proposal(proposal: Proposal) -> bool:\n        assert isinstance(proposal, dict), f\"Expected Proposal to be of type dict, got {type(proposal)}\"\n    \n        for key in Proposal.__annotations__:\n>           assert key in proposal, f\"Expected Proposal.{key} to be present\"\nE           AssertionError: Expected Proposal.metadata to be present\nE           assert 'metadata' in {'abstainVotes': 2491553547320, 'abstract': None, 'createdDate': '2024-08-12T11:06:06Z', 'createdEpochNo': 424, ...}\n\ntest_cases/test_proposal.py:9: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"govtool_api","time":{"start":1723790999713,"stop":1723790999713,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"govtool_api::0","time":{"start":1723791002371,"stop":1723791002371,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"Proposal"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_proposal"},{"name":"host","value":"fv-az529-896"},{"name":"thread","value":"1836-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_proposal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"146c9dec4a2375e3","reportUrl":"https://cardanoapi.github.io/govtool-test-reports/govtool-backend/5//#testresult/146c9dec4a2375e3","status":"failed","statusDetails":"AssertionError: Expected Proposal.metadata to be present\nassert 'metadata' in {'abstainVotes': 2491553547320, 'abstract': None, 'createdDate': '2024-08-09T09:10:31Z', 'createdEpochNo': 421, ...}","time":{"start":1723789128643,"stop":1723789128976,"duration":333}}]},"tags":[]},"source":"756f817a779d1d6a.json","parameterValues":[]}